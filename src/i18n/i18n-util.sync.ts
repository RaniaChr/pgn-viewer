// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */

import { initFormatters } from './formatters'
import type { Locales, Translations } from './i18n-types'
import { loadedFormatters, loadedLocales, locales } from './i18n-util'

import cs from '../locales/cs'
import da from '../locales/da'
import de from '../locales/de'
import en from '../locales/en'
import es from '../locales/es'
import et from '../locales/et'
import fi from '../locales/fi'
import fr from '../locales/fr'
import hu from '../locales/hu'
import is from '../locales/is'
import it from '../locales/it'
import nb from '../locales/nb'
import nl from '../locales/nl'
import pt from '../locales/pt'
import ro from '../locales/ro'
import sv from '../locales/sv'

const localeTranslations = {
	cs, da, de, en, es, et, fi, fr, hu, is, it, nb, nl, pt, ro, sv,
}

export const loadLocale = (locale: Locales): void => {
	if (loadedLocales[locale]) return

	loadedLocales[locale] = localeTranslations[locale] as unknown as Translations
	loadFormatters(locale)
}

export const loadAllLocales = (): void => locales.forEach(loadLocale)

export const loadFormatters = (locale: Locales): void =>
	void (loadedFormatters[locale] = initFormatters(locale))
